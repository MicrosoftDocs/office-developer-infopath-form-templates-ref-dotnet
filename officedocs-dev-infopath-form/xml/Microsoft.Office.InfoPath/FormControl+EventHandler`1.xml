<Type Name="FormControl+EventHandler&lt;EventArgs&gt;" FullName="Microsoft.Office.InfoPath.FormControl+EventHandler&lt;EventArgs&gt;">
  <TypeSignature Language="C#" Value="public delegate void FormControl.EventHandler&lt;EventArgs&gt;(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed FormControl/EventHandler`1&lt;EventArgs&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.InfoPath.FormControl.EventHandler`1" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub FormControl.EventHandler(Of EventArgs)(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public: generic &lt;typename EventArgs&gt;&#xA;delegate void FormControl::EventHandler(System::Object ^ sender, EventArgs e);" />
  <TypeSignature Language="F#" Value="type FormControl.EventHandler&lt;'EventArgs&gt; = delegate of obj * 'EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.InfoPath.FormControl</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="EventArgs" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="EventArgs">To be added.</typeparam>
    <param name="sender">To be added.</param>
    <param name="e">To be added.</param>
    <summary>To be added.</summary>
    <remarks>To be added.</remarks>
  </Docs>
</Type>
