<Type Name="DocEvent" FullName="Microsoft.Office.Interop.InfoPath.DocEvent">
  <TypeSignature Language="C#" Value="public interface DocEvent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DocEvent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.DocEvent" />
  <TypeSignature Language="VB.NET" Value="Public Interface DocEvent" />
  <TypeSignature Language="C++ CLI" Value="public interface class DocEvent" />
  <TypeSignature Language="F#" Value="type DocEvent = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096CD613-0786-11D1-95FA-0080C78EE3BB")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096CD613-0786-11D1-95FA-0080C78EE3BB")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(4288)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(4288)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.DocEventObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="XDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.InfoPath.XDocument XDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.InfoPath.XDocument XDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.DocEvent.XDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XDocument As XDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::InfoPath::XDocument ^ XDocument { Microsoft::Office::Interop::InfoPath::XDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XDocument : Microsoft.Office.Interop.InfoPath.XDocument" Usage="Microsoft.Office.Interop.InfoPath.DocEvent.XDocument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(100)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(100)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.InfoPath.XDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.Interop.InfoPath.XDocument" /> object that is associated with the <see cref="T:Microsoft.Office.Interop.InfoPath.DocEventObject" /> object during an <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnSwitchView" /> or <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnAfterImport" /> event.</summary>
        <value>To be added.</value>
        <remarks>
          <para>After you have set a reference to <b>XDocument</b> object that is returned, you can use any of the properties and methods that it provides.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>XDocument</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.DocEventObject" /> object is used to display the source XML of a form's underlying XML document using the <see cref="P:Microsoft.Office.Interop.InfoPath._XDocument2.DOM" /> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.XDocument" /> object:</para>
          <code>public void OnSwitchView(DocEvent e)
{
 thisXDocument.UI.Alert("The source XML: " + e.&lt;span class="label"&gt;XDocument&lt;/span&gt;.DOM.xml);
}</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
