<Type Name="ISubmitToHostEventHandler" FullName="Microsoft.Office.Interop.InfoPath.ISubmitToHostEventHandler">
  <TypeSignature Language="C#" Value="public interface ISubmitToHostEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISubmitToHostEventHandler" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.ISubmitToHostEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISubmitToHostEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISubmitToHostEventHandler" />
  <TypeSignature Language="F#" Value="type ISubmitToHostEventHandler = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("096CD738-0786-11D1-95FA-0080C78EE3BB")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType(1)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>The interface that must be implemented in the host application to handle the <see cref="M:Microsoft.Office.Interop.InfoPath.SubmitToHostAdapter.Submit" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.SubmitToHostAdapterObject" /> object when the <see cref="T:Microsoft.Office.Interop.InfoPath.InfoPathEditor" /> object is hosted in a custom application.</summary>
    <remarks>
      <para>The <b>ISubmitToHostEventHandler</b> interface is available for use when the <b>InfoPathEditor</b> object is hosted in a custom application. For more information, see the "The InfoPath Editor Hosted As a Control" section of What's New for InfoPath Developers and the MSDN article <a href="http://go.microsoft.com/fwlink/?LinkId=73195">Hosting the InfoPath  Form Editing Environment in a Custom Windows Form Application</a></para>
      <para />
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="SubmitToHostEventHandler">
      <MemberSignature Language="C#" Value="public int SubmitToHostEventHandler (object sender, string adapterName, out string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 SubmitToHostEventHandler([in]object sender, [in]string adapterName, [out] string&amp; errorMessage) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.InfoPath.ISubmitToHostEventHandler.SubmitToHostEventHandler(System.Object,System.String,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Function SubmitToHostEventHandler (sender As Object, adapterName As String, ByRef errorMessage As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int SubmitToHostEventHandler(System::Object ^ sender, System::String ^ adapterName, [Runtime::InteropServices::Out] System::String ^ % errorMessage);" />
      <MemberSignature Language="F#" Value="abstract member SubmitToHostEventHandler : obj * string * string -&gt; int" Usage="iSubmitToHostEventHandler.SubmitToHostEventHandler (sender, adapterName, errorMessage)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="adapterName" Type="System.String" />
        <Parameter Name="errorMessage" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="sender">The object sending the notification to the host.</param>
        <param name="adapterName">The name of the <b>SubmitToHostAdapter</b> object. </param>
        <param name="errorMessage">The message returned to the <b>InfoPathEditor</b> object.</param>
        <summary>Handles the event from the <see cref="M:Microsoft.Office.Interop.InfoPath.SubmitToHostAdapter.Submit" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.SubmitToHostAdapterObject" /> object when the <see cref="T:Microsoft.Office.Interop.InfoPath.InfoPathEditor" /> object is hosted in a custom application.</summary>
        <returns>HRESULT</returns>
        <remarks>
          <para>The <b>SubmitToHostEventHandler</b> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.ISubmitToHostEventHandler" /> interface is available for use when the <b>InfoPathEditor</b> object is hosted in a custom application. For more information, see the "The InfoPath Editor Hosted As a Control" section of What's New for InfoPath Developers and the MSDN article <a href="http://go.microsoft.com/fwlink/?LinkId=73195">Hosting the InfoPath  Form Editing Environment in a Custom Windows Form Application</a></para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
