<Type Name="ViewInfo2" FullName="Microsoft.Office.Interop.InfoPath.ViewInfo2">
  <TypeSignature Language="C#" Value="public interface ViewInfo2 : Microsoft.Office.Interop.InfoPath.ViewInfo" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ViewInfo2 implements class Microsoft.Office.Interop.InfoPath.ViewInfo" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.ViewInfo2" />
  <TypeSignature Language="VB.NET" Value="Public Interface ViewInfo2&#xA;Implements ViewInfo" />
  <TypeSignature Language="C++ CLI" Value="public interface class ViewInfo2 : Microsoft::Office::Interop::InfoPath::ViewInfo" />
  <TypeSignature Language="F#" Value="type ViewInfo2 = interface&#xA;    interface ViewInfo" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.InfoPath.ViewInfo</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("096CD5FB-0786-11D1-95FA-0080C78EE3BB")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.TypeLibType(4288)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfoObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public string Caption { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.ViewInfo2.Caption" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Caption { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string" Usage="Microsoft.Office.Interop.InfoPath.ViewInfo2.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(3)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the value of the <b>caption</b> attribute of the <b>xsf:view</b> element associated with the view in the form definition file (.xsf).</summary>
        <value>The value of the <b>caption</b> attribute of the <b>xsf:view</b> element associated with the view in the form definition file (.xsf)</value>
        <remarks>
          <para>By default, the value of the <b>caption</b> attribute is the same as the name given to the view when it was created in Microsoft InfoPath.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HideName">
      <MemberSignature Language="C#" Value="public bool HideName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HideName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.ViewInfo2.HideName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HideName As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HideName { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HideName : bool" Usage="Microsoft.Office.Interop.InfoPath.ViewInfo2.HideName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(4)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets whether the name of the view is set to be hidden on the View menu.</summary>
        <value>
          <b>true</b> if the name of the view is hidden; otherwise <b>false</b>.</value>
        <remarks>
          <para>The <b>HideName</b> property specifies whether the form designer set the Show on the View menu when filling out the form check box in the View Properties dialog box.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>HideName</b> property is used to display whether the view named "View2" is configured to be hidden on the View menu.</para>
          <code>ViewInfo2 myView = (ViewInfo2)thisXDocument.ViewInfos["View2"];
thisXDocument.UI.Alert("Is hidden: " + myView.HideName);</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.ViewInfo2.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="Microsoft.Office.Interop.InfoPath.ViewInfo2.IsDefault" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Interop.InfoPath.ViewInfo.IsDefault</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>set: System.Runtime.InteropServices.DispId(2)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value that indicates whether the view is defined as the default view in a Microsoft InfoPath form.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The <b>IsDefault</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfoObject" /> object can be used to determine whether a view is the default view, and it can be used to programmatically change the default view before the first view is loaded.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>IsDefault</b> property is used to make the second view contained in the <see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfosCollection" /> collection the default view:</para>
          <code>thisXDocument.ViewInfos[1].&lt;span class="label"&gt;IsDefault&lt;/span&gt; = true;</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.ViewInfo2.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="Microsoft.Office.Interop.InfoPath.ViewInfo2.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Interop.InfoPath.ViewInfo.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.InteropServices.DispId(1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the view that is associated with the <see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfoObject" /> object.</summary>
        <value>To be added.</value>
        <remarks>
          <para>The name of the <b>ViewInfoObject</b> object is the same as the name of the view that it represents. The name of the <b>ViewInfoObject</b> object can also be used as the argument to the <see cref="P:Microsoft.Office.Interop.InfoPath.ViewInfos.Item(System.Object)" /> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfosCollection" /> collection.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>Name</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.ViewInfoObject" /> object is used to display the name of a view in a message box:</para>
          <code>ViewInfo viewInfo;
viewInfo = thisXDocument.ViewInfos[0];
thisXDocument.UI.Alert("View name: " + viewInfo.&lt;span class="label"&gt;Name&lt;/span&gt;);</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
