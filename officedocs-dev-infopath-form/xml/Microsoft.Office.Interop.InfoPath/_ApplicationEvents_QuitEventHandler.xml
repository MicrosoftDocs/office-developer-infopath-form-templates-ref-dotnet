<Type Name="_ApplicationEvents_QuitEventHandler" FullName="Microsoft.Office.Interop.InfoPath._ApplicationEvents_QuitEventHandler">
  <TypeSignature Language="C#" Value="public delegate void _ApplicationEvents_QuitEventHandler();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed _ApplicationEvents_QuitEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath._ApplicationEvents_QuitEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub _ApplicationEvents_QuitEventHandler()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void _ApplicationEvents_QuitEventHandler();" />
  <TypeSignature Language="F#" Value="type _ApplicationEvents_QuitEventHandler = delegate of unit -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(false)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(false)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(16)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(16)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>Represents the method that will handle the <see cref="E:Microsoft.Office.Interop.InfoPath._ApplicationEvents_Event.Quit" /> event.</summary>
    <remarks>
      <para>When you create an <see cref="T:Microsoft.Office.Interop.InfoPath._ApplicationEvents_QuitEventHandler" /> delegate, you identify the method that will handle the event. To associate the event with your event handler, add an instance of the delegate to the event. The event handler is called whenever the event occurs, unless you remove the delegate. For more information, see Events and Delegates.</para>
      <para />
    </remarks>
  </Docs>
</Type>
