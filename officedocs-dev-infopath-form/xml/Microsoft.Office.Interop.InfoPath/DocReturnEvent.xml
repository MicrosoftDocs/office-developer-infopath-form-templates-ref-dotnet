<Type Name="DocReturnEvent" FullName="Microsoft.Office.Interop.InfoPath.DocReturnEvent">
  <TypeSignature Language="C#" Value="public interface DocReturnEvent : Microsoft.Office.Interop.InfoPath.DocEvent" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract DocReturnEvent implements class Microsoft.Office.Interop.InfoPath.DocEvent" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.DocReturnEvent" />
  <TypeSignature Language="VB.NET" Value="Public Interface DocReturnEvent&#xA;Implements DocEvent" />
  <TypeSignature Language="C++ CLI" Value="public interface class DocReturnEvent : Microsoft::Office::Interop::InfoPath::DocEvent" />
  <TypeSignature Language="F#" Value="type DocReturnEvent = interface&#xA;    interface DocEvent" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>Microsoft.Office.Interop.InfoPath.DocEvent</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096CD676-0786-11D1-95FA-0080C78EE3BB")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096CD676-0786-11D1-95FA-0080C78EE3BB")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(4288)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(4288)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>This type is a wrapper for a COM interface implemented by a coclass that is required by managed code for COM interoperability. To access the members specified by this interface, use the type that wraps the coclass that implements this interface. For information about that type, including usage, remarks, and examples, see<see cref="T:Microsoft.Office.Interop.InfoPath.DocReturnEventObject" />.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="ReturnStatus">
      <MemberSignature Language="C#" Value="public bool ReturnStatus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReturnStatus" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.DocReturnEvent.ReturnStatus" />
      <MemberSignature Language="VB.NET" Value="Public Property ReturnStatus As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReturnStatus { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReturnStatus : bool with get, set" Usage="Microsoft.Office.Interop.InfoPath.DocReturnEvent.ReturnStatus" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(101)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(101)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(101)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(101)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[set: System.Runtime.InteropServices.DispId(101)]</AttributeName>
          <AttributeName Language="F#">[&lt;set: System.Runtime.InteropServices.DispId(101)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets a value indicating the return status of the <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnLoad" /> event and the <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnSubmitRequest" /> event.</summary>
        <value>To be added.</value>
        <remarks>
          <para>If the <b>ReturnStatus</b> property is set to <b>false</b>, the <b>OnLoad</b> and <b>OnSubmitRequest</b> events fail. If set to <b>true</b>, the <b>OnLoad</b> and <b>OnSubmitRequest</b> events are successful. The default value for the <b>OnLoad</b> event is <b>true</b>, and the default value for the OnSubmitRequest event is <b>false</b>.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>ReturnStatus</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.DocReturnEventObject" /> object is used to indicate that the <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnLoad" /> event was not successful:</para>
          <code>public void OnLoad(DocReturnEvent e)
{ 
 // Cancel the event.
 e.&lt;span class="label"&gt;ReturnStatus&lt;/span&gt; = false;
}</code>
        </example>
      </Docs>
    </Member>
    <Member MemberName="XDocument">
      <MemberSignature Language="C#" Value="public Microsoft.Office.Interop.InfoPath.XDocument XDocument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Office.Interop.InfoPath.XDocument XDocument" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.DocReturnEvent.XDocument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XDocument As XDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Office::Interop::InfoPath::XDocument ^ XDocument { Microsoft::Office::Interop::InfoPath::XDocument ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.XDocument : Microsoft.Office.Interop.InfoPath.XDocument" Usage="Microsoft.Office.Interop.InfoPath.DocReturnEvent.XDocument" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:Microsoft.Office.Interop.InfoPath.DocEvent.XDocument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(100)&gt;]</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName Language="C#">[get: System.Runtime.InteropServices.DispId(100)]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.InteropServices.DispId(100)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>Microsoft.Office.Interop.InfoPath.XDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets a reference to the <see cref="T:Microsoft.Office.Interop.InfoPath.XDocument" /> object that is associated with the <see cref="T:Microsoft.Office.Interop.InfoPath.DocReturnEventObject" /> object during an <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnLoad" /> or <see cref="E:Microsoft.Office.Interop.InfoPath._XDocumentEventSink2_Event.OnSubmitRequest" /> event.</summary>
        <value>To be added.</value>
        <remarks>
          <para>After you have set a reference to the <b>XDocument</b> object that is returned, you can use any of the properties and methods that it provides.</para>
          <para />
        </remarks>
        <example>
          <para>In the following example, the <b>XDocument</b> property of the <see cref="T:Microsoft.Office.Interop.InfoPath.DocReturnEventObject" /> object is used to display the source XML of a form's underlying XML document using the DOM property of the <see cref="T:Microsoft.Office.Interop.InfoPath.XDocument" /> object:</para>
          <code>public void OnLoad(DocReturnEvent e)
{
 thisXDocument.UI.Alert("The source XML: " + e.&lt;span class="label"&gt;XDocument&lt;/span&gt;.DOM.xml);
 e.ReturnStatus = true;
}</code>
        </example>
      </Docs>
    </Member>
  </Members>
</Type>
