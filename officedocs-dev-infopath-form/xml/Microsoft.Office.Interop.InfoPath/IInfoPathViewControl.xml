<Type Name="IInfoPathViewControl" FullName="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl">
  <TypeSignature Language="C#" Value="public interface IInfoPathViewControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInfoPathViewControl" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInfoPathViewControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInfoPathViewControl" />
  <TypeSignature Language="F#" Value="type IInfoPathViewControl = interface" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
    <AssemblyVersion>15.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComConversionLoss]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComConversionLoss&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.Guid("096CD6DA-0786-11D1-95FA-0080C78EE3BB")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.Guid("096CD6DA-0786-11D1-95FA-0080C78EE3BB")&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.InterfaceType(1)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.InterfaceType(1)&gt;]</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName Language="C#">[System.Runtime.InteropServices.TypeLibType(384)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.TypeLibType(384)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Represents a control present in the view.</summary>
    <remarks>
      <para>The <b>IInfoPathViewControl</b> interface, used in conjunction with the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporter" /> interface, allows developers to get specific information about the controls in the view, such as the <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.ControlType" /> and the <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.DataType" />, the <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Top" /> and <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Left" /> positions, the XML <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.NodeName" /> associated with the control, and the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.InputScopes(System.IntPtr,System.UInt32@,Microsoft.Office.Interop.InfoPath.IEnumString@,System.String@)" />. The <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Value" /> property is the only property that can be set.</para>
      <para>For a list of controls that are enumerated if present in the view, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface. For a list of acceptable data types that can be used with specific controls, see the <see cref="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Value" /> property of the <b>IInfoPathViewControl</b> interface.</para>
      <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
      <para />
    </remarks>
    <example>
      <para>In the following example, the <b>Import</b> method of the <b>IInfoPathDataImporter</b> interface is used to iterate through the <b>mshtml.IEnumUnknown</b> collection of <b>IInfoPathViewControl</b> controls in the view of the active form.</para>
      <para>The <b>Import</b> routine is the main part of a solution used to build a custom data importer. The Visual Studio project requires a reference to the Microsoft Office InfoPath 2.0 Type Library and <b>System.Windows.Forms</b>, with <b>Imports</b> statements for each as well as <b>mshtml.Implements</b> statements are required to generate the signatures for the methods provided by the custom data importer interfaces, including <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporter" />, <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" />, <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl" />, and <see cref="T:Microsoft.Office.Interop.InfoPath.IPropertyBag" />.</para>
      <para>
        <b>Note</b>: To build a custom data importer using a .NET class library, check the Register for COM interop check box on the Compile tab of the class properties editor.</para>
      <para>
        <b>Note</b>: To debug a custom data importer, set a Start Action in Visual Studio to <b>Start an external program</b>, and browse to INFOPATH.EXE located at &lt;drive&gt;:\Program Files\Microsoft Office\Office12\. This option is available on the Debug tab of the class properties editor.</para>
      <code>Imports Microsoft.Office.Interop.InfoPath
Imports System.Windows.Forms
Imports mshtml

&amp;lt;ComClass(Class1.ClassId, Class1.InterfaceId, Class1.EventsId)&amp;gt; Public Class Class1
   Implements Microsoft.Office.Interop.InfoPath.IInfoPathDataImporter
   Implements Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields
   Implements Microsoft.Office.Interop.InfoPath.IInfoPathViewControl
   Implements Microsoft.Office.Interop.InfoPath.IPropertyBag

   Public Const ClassId As String = _
      "1FEB0DF8-E7F1-4b21-A9EE-B06D5FECC572"
   Public Const InterfaceId As String = _
      "9F9F685C-71A0-46ec-A7F9-A86AF8CBC2A8"
   Public Const EventsId As String = _
      "ED7C0C49-3F89-40a2-A50E-C59E8F682B08" 

Public Sub Import(
   _ByVal pPrintSettings As Microsoft.Office.Interop.InfoPath.IPropertyBag, _
   ByVal punkViewControls As mshtml.IEnumUnknown) _
   Implements Microsoft.Office.Interop.InfoPath.IInfoPathDataImporter.Import

   Dim pControl As IInfoPathViewControl
   Dim pUnk As Object
   Dim pcelt As UInt16 = 1
   Dim pceltFetched As UInt16 = 0

   Try
      'Gets first control in the view
      punkViewControls.RemoteNext(pcelt, pUnk, pceltFetched)

      Do While pUnk.ToString() &amp;lt;&amp;gt; "Nothing"
         pControl = pUnk
         MessageBox.Show(pControl.ControlType)
         'Gets next control in the view
         punkViewControls.RemoteNext(pcelt, pUnk, pceltFetched)
      Loop
   Catch e As Exception
      If e.Message = _
         "Object reference not set to an instance of an object." Then
         ' Signals the end of the enumeration/controls in the view
      Else
         MessageBox.Show("Error: " &amp;amp; e.ToString &amp;amp; " " &amp;amp; e.Message)
      End If
   End Try
End Sub</code>
    </example>
  </Docs>
  <Members>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public string ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ControlType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ControlType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlType : string" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.ControlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678276)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678276)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the control type of the current control in the enumeration.</summary>
        <value>The control type of the current control.</value>
        <remarks>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataType">
      <MemberSignature Language="C#" Value="public string DataType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataType" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.DataType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataType { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataType : string" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.DataType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678277)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678277)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the data type of a control in the view.</summary>
        <value>The data type of the control.</value>
        <remarks>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public int Height { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Height" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Height As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Height { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Height : int" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678275)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678275)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the height of the current control in the enumeration. </summary>
        <value>The height of the control, in pixels.</value>
        <remarks>
          <para>Pixel coordinates are calculated using <b>screenCoordinate</b> values from the MSHTML.DLL document service, which are roughly equivalent to standard CSS values.</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputScopes">
      <MemberSignature Language="C#" Value="public void InputScopes (IntPtr ppInputScopes, out uint pcInputScopes, out Microsoft.Office.Interop.InfoPath.IEnumString ppenumPhraseList, out string pbstrRegExp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InputScopes([out] native int ppInputScopes, [out] unsigned int32&amp; pcInputScopes, [out] class Microsoft.Office.Interop.InfoPath.IEnumString&amp; ppenumPhraseList, [out] string&amp; pbstrRegExp) runtime managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.InputScopes(System.IntPtr,System.UInt32@,Microsoft.Office.Interop.InfoPath.IEnumString@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InputScopes (ppInputScopes As IntPtr, ByRef pcInputScopes As UInteger, ByRef ppenumPhraseList As IEnumString, ByRef pbstrRegExp As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InputScopes(IntPtr ppInputScopes, [Runtime::InteropServices::Out] System::UInt32 % pcInputScopes, [Runtime::InteropServices::Out] Microsoft::Office::Interop::InfoPath::IEnumString ^ % ppenumPhraseList, [Runtime::InteropServices::Out] System::String ^ % pbstrRegExp);" />
      <MemberSignature Language="F#" Value="abstract member InputScopes : nativeint * uint32 * IEnumString * string -&gt; unit" Usage="iInfoPathViewControl.InputScopes (ppInputScopes, pcInputScopes, ppenumPhraseList, pbstrRegExp)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ppInputScopes" Type="System.IntPtr" />
        <Parameter Name="pcInputScopes" Type="System.UInt32" RefType="out" />
        <Parameter Name="ppenumPhraseList" Type="Microsoft.Office.Interop.InfoPath.IEnumString" RefType="out" />
        <Parameter Name="pbstrRegExp" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="ppInputScopes">Pointer to an array of input scopes.</param>
        <param name="pcInputScopes">The number of input scopes in the array pointed to by <paramref name="ppInputScopes" />.</param>
        <param name="ppenumPhraseList">Pointer to an implementation of the <see cref="T:Microsoft.Office.Interop.InfoPath.IEnumString" /> interface containing the phrase list.</param>
        <param name="pbstrRegExp">Pointer to a string containing the regular expression to be recognized.</param>
        <summary>Gets the input scope of the current control in the enumeration.</summary>
        <remarks>
          <para>For information about how input scopes are defined for controls in InfoPath forms, search InfoPath help for "Input scopes for InfoPath controls".</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Left">
      <MemberSignature Language="C#" Value="public int Left { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Left" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Left" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Left As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Left { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Left : int" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Left" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678272)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678272)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset, from the left side of the view, of the current control in the enumeration.</summary>
        <value>The number of pixels the control is from the left side of the view.</value>
        <remarks>
          <para>Pixel coordinates are calculated using <b>screenCoordinate</b> values from the MSHTML.DLL document service, which are roughly equivalent to standard CSS values.</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NodeName">
      <MemberSignature Language="C#" Value="public string NodeName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NodeName" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.NodeName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NodeName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeName : string" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.NodeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678278)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678278)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the name of the node associated with the current control in the enumeration.</summary>
        <value>The name of the XML node to which the control is bound.</value>
        <remarks>
          <para>Pixel coordinates are calculated using <b>screenCoordinate</b> values from the MSHTML.DLL document service, which are roughly equivalent to standard CSS values.</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public int Top { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Top" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Top" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Top As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Top { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Top : int" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Top" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678273)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678273)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the offset, from the top of the view, of the current control in the enumeration.</summary>
        <value>The number of pixels the control is from the top of the view.</value>
        <remarks>
          <para>Pixel coordinates are calculated using <b>screenCoordinate</b> values from the MSHTML.DLL document service, which are roughly equivalent to standard CSS values.</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678279)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678279)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the value of the current control in the enumeration. </summary>
        <value>The value of the control.</value>
        <remarks>
          <para>The following controls are limited to certain types of data.</para>
          <list type="table">
            <item>
              <term>Textbox</term>
              <description>Any <b>xsd:string</b> value</description>
            </item>
            <item>
              <term>Rich Text Box</term>
              <description>XHTML tree with XHTML namespaces on top level elements. XHTML tree will be inserted into XML DOM without parsing.</description>
            </item>
            <item>
              <term>Drop-Down List Box</term>
              <description>Any <b>xsd:string</b> value</description>
            </item>
            <item>
              <term>List Box</term>
              <description>Any <b>xsd:string</b> value</description>
            </item>
            <item>
              <term>Date Picker</term>
              <description>Any <b>xsd:string</b> value</description>
            </item>
            <item>
              <term>Check Box</term>
              <description>"CHECKED" or "UNCHECKED"</description>
            </item>
            <item>
              <term>Option Button</term>
              <description>"SELECTED"</description>
            </item>
            <item>
              <term>Bulleted, Numbered and Plain Lists</term>
              <description>Any <b>xsd:string</b> value</description>
            </item>
            <item>
              <term>Picture and Ink Picture</term>
              <description>Any <b>xsd:base64Binary</b> data</description>
            </item>
          </list>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public int Width { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Width" />
      <MemberSignature Language="DocId" Value="P:Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Width As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Width { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Width : int" Usage="Microsoft.Office.Interop.InfoPath.IInfoPathViewControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Office.Interop.InfoPath</AssemblyName>
        <AssemblyVersion>15.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.Runtime.InteropServices.DispId(1610678274)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.DispId(1610678274)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the width of the current control in the enumeration.</summary>
        <value>The width of the control, in pixels.</value>
        <remarks>
          <para>Pixel coordinates are calculated using <b>screenCoordinate</b> values from the MSHTML.DLL document service, which are roughly equivalent to standard CSS values.</para>
          <para>For a list of controls that are enumerated in the view, if present, see the <see cref="M:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields.GetControls(mshtml.IEnumUnknown@)" /> method of the <see cref="T:Microsoft.Office.Interop.InfoPath.IInfoPathDataImporterFields" /> interface.</para>
          <para>For more information about programmatically importing data into an InfoPath form, see the <a href="http://go.microsoft.com/fwlink/?LinkID=11689">InfoPath Developer Portal</a>Microsoft Office Developer Center.</para>
          <para />
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
